<%- layout('/layout/modal.ejs') -%><%configSonos =  JSON.parse(fs.readFileSync('plugins/sonos/configSonosPerso.prop','utf8'));devices = JSON.parse(fs.readFileSync('plugins/sonos/devices.tmp','utf8'));%>	<script>	(function($){		$('#submitSonos').on('click', function() {			$.ajax({			  type: "GET",			  url: '/sarah/sonos?actionSonos=saveConfig&'+$('#monForm').serialize(),			  success: function() {				  alert('Paramètres sauvegardés. Merci de redemarrer votre serveur NodeJS.');			  }			});			return false;		});				/* On récupère en JS la config */		configSonos = <%-JSON.stringify(configSonos)%>;				/* TimePicker pour la fonctionnalité de Silence */		$('#timepicker1').datetimepicker({			pickDate: false,			useSeconds: false,			language: 'fr',			defaultDate: configSonos.silenceStart != null ? configSonos.silenceStart : "current"		});				$('#timepicker2').datetimepicker({			pickDate: false,			useSeconds: false,			language: 'fr',			defaultDate: configSonos.silenceEnd != null ? configSonos.silenceEnd : "current"		});				limitSonos();		limitSilence(1);	})(jQuery);		/*	* Permet de limiter les listes déroulante pour sélectionner l'enceinte une seule fois	*/		function limitSonos() {		$('.enceintes > option').each(function() {			$(this).removeAttr('disabled');		});				$('.enceintes > option:selected').each(function() {			roomName = $(this).val();			$('.enceintes > option:not(.enceintes > option:selected)').each(function() {				if (roomName == $(this).val() && $(this).val() != '...') {					$(this).attr('disabled', 'disabled');				}			});		});				checkIfCheckAllowed();	}		/* Désactive les réglages concernant	* le Silence de SARAH si jamais l'export 	* de voix est désactivé	*/	function limitSilence(iCase) {		switch (iCase)		{			case 1:				/*Si l'export de voix est désactivé les heure de silence aussi*/				if ($('#exportAllVoice').val() == 0) {					$('#Silence option[value=0]').prop('selected', true);					$("#Silence").prop('disabled', true);					$("#timepicker1").prop('disabled', true);					$("#timepicker2").prop('disabled', true);					$("#SilenceTR").hide();					$("#VoiceChoiceTR").hide();					$('#TypeExportTR').hide();				}				else {					$('#Silence option[value='+ (configSonos.Silence != null ? configSonos.Silence : $("#Silence").val()) +']').prop('selected', true);					$("#Silence").prop('disabled', false);					$("#timepicker1").prop('disabled', false);					$("#timepicker2").prop('disabled', false);					$("#SilenceTR").show();					$("#VoiceChoiceTR").show();					$('#TypeExportTR').show();				}			break;			case 2:				if ($('#Silence').val() == 0) {					$("#timepicker1").prop('disabled', true);					$("#timepicker2").prop('disabled', true);				}				else {					$("#timepicker1").prop('disabled', false);					$("#timepicker2").prop('disabled', false);				}			break;		}	}		/*	* Bloquer la coche de plusieurs checkbox du même client	* 1 seul checkbox / client pour le moment	* TODO: A retirer le jour ou SARAH peut parler depuis plusieurs	* enceintes depuis le même client	*/	function checkIfCheckAllowed() {		for (var key in configSonos.equipements) {			var checked = $('.checkbox_'+key+':checked');						if (checked.size() > 0) {				/*console.log('coche > 0'+key);*/				$('.checkbox_'+key).not(checked).removeAttr('checked').attr('disabled','disabled');			}			else {				/*console.log('aucune coche'+key);*/				$('.checkbox_'+key).removeAttr('checked').removeAttr('disabled');				$('.checkbox_vocalisation_'+key).val('0');			}		}	}		/*	* Vérifie que le nom de la Sonos n'existe pas	* Return true nom trouvé	*/	function checkIfnameExist(guid) {		for (var key in configSonos.equipements) {			if (guid == key) {				return true;			}		}		return false;	}		/* Génère un GUID */	var guid = (function() {		function s4() {		return Math.floor((1 + Math.random()) * 0x10000)			   .toString(16)			   .substring(1);		}		return function() {		return s4() + s4() + '-' + s4() + '-' + s4() + '-' +		   s4() + '-' + s4() + s4() + s4();		};	})();		function createEquipements() {		nomEquipement = prompt('Quel est le nom du client Sarah ?');		var uuid = guid();		if(checkIfnameExist(uuid))			uuid = guid();		if (nomEquipement != null && nomEquipement != "" && uuid != null && uuid != "") {			$('#tableauEquipements > tbody:last').append('<tr id="ligne_'+nomEquipement+'_'+uuid+'">											<td align="center">'+nomEquipement+'</td>											<td align="center" id="equipements_name'+nomEquipement+'_'+uuid+'"></td>											<td align="center">												<input type="hidden" name="equipements['+nomEquipement+']['+uuid+'][name]" value="" id="equipementsname'+nomEquipement+'_'+uuid+'" />												<input type="hidden" name="equipements['+nomEquipement+']['+uuid+'][mac]" value="" id="equipementsmac'+nomEquipement+'_'+uuid+'" />												<input type="hidden" name="equipements['+nomEquipement+']['+uuid+'][ip]" value="" id="equipementsip'+nomEquipement+'_'+uuid+'" />												<select class="enceintes" onChange="$(\'#equipementsmac'+nomEquipement+'_'+uuid+'\').val($(\'option:selected\', this).attr(\'mac\'));$(\'#equipementsip'+nomEquipement+'_'+uuid+'\').val($(\'option:selected\', this).attr(\'ip\'));												$(\'#equipementsname'+nomEquipement+'_'+uuid+'\').val($(\'option:selected\', this).attr(\'name\'));												$(\'#equipements_name'+nomEquipement+'_'+uuid+'\').html($(\'option:selected\', this).attr(\'name\').replace(\' \', \'&nbsp;\'));limitSonos();">												<option mac="" ip="">...</option>												<%												for (var deviceIndex in devices){ %>																<option mac="<%= devices[deviceIndex].mac %>" ip="<%= devices[deviceIndex].ip %>" name="<%= devices[deviceIndex].name %>"><%= devices[deviceIndex].name %></option>													<%												}												%>											</select>											</td>											<%											if (configSonos.exportAllVoice == null || configSonos.exportAllVoice == 1){ %>												<td align="center">													<input type="hidden" class="checkbox_vocalisation_'+nomEquipement+'" name="equipements['+nomEquipement+']['+uuid+'][vocalisation]" id="equipementvcl'+nomEquipement+'_'+uuid+'" value="0" />													<input type="checkbox" class="checkbox_'+nomEquipement+'" value="1" onclick="$(\'#equipementvcl'+nomEquipement+'_'+uuid+'\').attr(\'value\', this.checked ? 1 : 0);limitSonos();">												</td>												<%											}											%>											<td><img src="./assets/sonos/images/del.png" alt="Supprimer cet équipement" title="Supprimer cet équipement" style="cursor:pointer" onClick="if (confirm(\'Etes vous sûr de vouloir supprimer cet équipement ?\')) { $(\'#ligne_'+nomEquipement+'_'+uuid+'\').remove(); };limitSonos()" /></td>										</tr>');				}				limitSonos();				return false;	}	</script>	<%- i18n('plugin.sonos.descriptionPlugin') -%>	 <br>	 	<!-- Navigation -->	<ul class="nav nav-tabs" role="tablist">		<li class="active"><a href="#plugin-version" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-home"></span></a></li>		<li><a href="#plugin-doc" role="tab" data-toggle="tab"><%- i18n('plugin.sonos.documentation') -%></a></li>		<li><a href="#plugin-config" role="tab" data-toggle="tab"><%- i18n('plugin.sonos.configuration') -%></a></li>		<li ><a href="#plugin-errors" role="tab" data-toggle="tab"><%- i18n('plugin.sonos.erreur') -%></a></li>	</ul>	<!-- Content -->	<div class="tab-content">		<div class="tab-pane" id="plugin-doc">			Ce plugin permet de contrôler des périphériques SONOS. Il vous permet aussi de rediriger les TTS à travers votre système SONOS.			 <br/><br/>			Les actions suivantes sont disponibles :<br/>			<ul>				<li>lecture/pause: <b>SARAH</b> lance/allume/arrête la radio/musique</li>				<li>changement de musique: <b>SARAH</b> passe à la musique suivante/précedente</li>				<li>augmenter/baisser le volume: <b>SARAH</b> monte/baisse/règle le son/volume à X pourcent</li>				<li>lancer une radio: <b>SARAH</b> lance la radio</li>				<li>synchroniser des pièces: <b>SARAH</b> synchronise la musique vers le Salon</li>			</ul>			<br/><br/>			Vous pouvez commander vos sonos en indiquant à chaque fois l'action et le lieu. Sarah vous répondra dans le lieu en question<br/>			Exemple :<br/>			Sarah --- Action --- lieu<br/>			Sarah --- Allume la musique --- dans le salon<br/>		</div>		<div class="tab-pane" id="plugin-config">			<form id="monForm" method="post" action="/sarah/sonos/?actionSonos=saveConfig">				<table class="table table-striped table-hover">					<caption><%- i18n('plugin.sonos.titreParams') -%></caption>					<thead>						<tr>							<td><b><%- i18n('plugin.sonos.param') -%></b></td>							<td><b><%- i18n('plugin.sonos.value') -%></b></td>							<td class="commentaires"><b><%- i18n('plugin.sonos.comms') -%></b></td>						</tr>					</thead>					<tbody>						<tr>							<td><%- i18n('plugin.sonos.speaker') -%></td>							<td>							<table id="tableauEquipements" border=1>							<thead>								<tr>									<td align="center">Client&nbsp;Sarah</td>									<td align="center"><%- i18n('plugin.sonos.name') -%></td>									<td align="center"><a href="/sarah/sonos?actionSonos=lookForSonos" target="_blank" title="<%- i18n('plugin.sonos.reload') -%>"><%- i18n('plugin.sonos.name') -%></a></td>									<%									if (configSonos.exportAllVoice == 1){ %>										<td align="center"><%- i18n('plugin.sonos.vocalisation') -%></td>										<%									}									%>									<td></td>								</tr>							</thead>							<tbody>						<% 						for (var key in configSonos.equipements){							for (var uuid in configSonos.equipements[key]){ 																if (configSonos.equipements[key][uuid].name != undefined) {								%>								<tr id="ligne_<%= key %>_<%= uuid %>">									<td align="center"><%= key %></td>									<td align="center" id="equipements_name<%= key %>_<%= uuid %>"><%= configSonos.equipements[key][uuid].name.replace(" ", "&nbsp;") %></td>									<td align="center">										<input type="hidden" name="equipements[<%= key %>][<%= uuid %>][name]" id="equipementsname<%= key %>_<%= uuid %>" value="<%= configSonos.equipements[key][uuid].name %>" />										<input type="hidden" name="equipements[<%= key %>][<%= uuid %>][mac]" id="equipementsmac<%= key %>_<%= uuid %>" value="<%= configSonos.equipements[key][uuid].mac %>" />										<input type="hidden" name="equipements[<%= key %>][<%= uuid %>][ip]" id="equipementsip<%= key %>_<%= uuid %>" value="<%= configSonos.equipements[key][uuid].ip %>" />										<select class="enceintes" onChange="$('#equipementsmac<%= key %>_<%= uuid %>').val($('option:selected', this).attr('mac'));$('#equipementsip<%= key %>_<%= uuid %>').val($('option:selected', this).attr('ip'));$('#equipementsname<%= key %>_<%= uuid %>').val($('option:selected', this).attr('name'));$('#equipements_name<%= key %>_<%= uuid %>').html($('option:selected', this).attr('name').replace(' ', '&nbsp;'));limitSonos();">											<option mac="" ip="">...</option>											<%											for (var deviceIndex in devices){ %>															<option <% if (configSonos.equipements[key][uuid].mac == devices[deviceIndex].mac){ %>selected<% } %> mac="<%= devices[deviceIndex].mac %>" ip="<%= devices[deviceIndex].ip %>" name="<%= devices[deviceIndex].name %>"><%= devices[deviceIndex].name %></option>												<%											}											%>										</select>										</td>										<%										if (configSonos.exportAllVoice == 1){ %>											<td align="center">												<input type="hidden" class="checkbox_vocalisation_<%= key %>" name="equipements[<%= key %>][<%= uuid %>][vocalisation]" id="equipementvcl<%= key %>_<%= uuid %>" value="<%= configSonos.equipements[key][uuid].vocalisation %>" />												<input type="checkbox" class="checkbox_<%= key %>" value="<%= configSonos.equipements[key][uuid].vocalisation %>" 												<% if (configSonos.equipements[key][uuid].vocalisation == 1) { %>checked="checked<% } %>"												onclick="$('#equipementvcl<%= key %>_<%= uuid %>').attr('value', this.checked ? 1 : 0);limitSonos();">											</td>											<%										}										%>										<td><span class="glyphicon glyphicon-minus" style="cursor:pointer" onClick="if (confirm('Etes vous sûr de vouloir supprimer cet équipement ?')) { $('#ligne_<%= key %>_<%= uuid %>').remove(); };limitSonos()"></span></td>								</tr>								<%								}							}						}						%>							</tbody>							</table>							<br />							<a href="#" onClick="return createEquipements();"><span class="glyphicon glyphicon-plus"><%- i18n('plugin.sonos.addSonos') -%></a>							</td>							<td class="commentaires"><%- i18n('plugin.sonos.titleConfig') -%>								<br /><br />								<%- i18n('plugin.sonos.descConfig') -%>							</td>						</tr>												<tr>							<td><%- i18n('plugin.sonos.titleVolume') -%></td>							<td><input type="number" name="volumeAnnonce" min="0" max="100" value="<%= configSonos.volumeAnnonce %>" /></td>							<td class="commentaires"><%- i18n('plugin.sonos.descVolume') -%></td>						</tr>						<tr>							<td><%- i18n('plugin.sonos.titleVolumePalier') -%></td>							<td><input type="number" name="volumePalier" min="0" max="100" value="<%= configSonos.volumePalier %>" /></td>							<td class="commentaires"><%- i18n('plugin.sonos.descVolumePalier') -%></td>						</tr>						<tr>							<td><%- i18n('plugin.sonos.titleRadio') -%></td>							<td><input type="text" name="defaultRadio" value="<%= configSonos.defaultRadio %>" /></td>							<td class="commentaires"><%- i18n('plugin.sonos.descRadio') -%>								<br />								<%- i18n('plugin.sonos.suppRadio') -%>							</td>						</tr>												<tr>							<td><%- i18n('plugin.sonos.titleConfirmAction') -%></td>							<td>								<select name="confirmActions">									<option value="1" <% if (configSonos.confirmActions == 1){ %>selected<% } %>>Oui</option>									<option value="0" <% if (configSonos.confirmActions == 0){ %>selected<% } %>>Non</option>								</select>							</td>							<td class="commentaires">								<%- i18n('plugin.sonos.descConfirmAction') -%>								<br />								<%- i18n('plugin.sonos.exConfirmAction') -%>							</td>						</tr>					</tbody>					</table>																														<table class="table table-striped table-hover">						<caption>Export des voix</caption>						<thead>							<tr>								<td><b><%- i18n('plugin.sonos.param') -%></b></td>								<td><b><%- i18n('plugin.sonos.value') -%></b></td>								<td class="commentaires"><b><%- i18n('plugin.sonos.comms') -%></b></td>							</tr>						</thead>						<tbody>						<tr>							<td><%- i18n('plugin.sonos.titleExportVoice') -%></td>							<td>								<select name="exportAllVoice" id="exportAllVoice" onChange="limitSilence(1)">									<option value="1" <% if (configSonos.exportAllVoice == 1){ %>selected<% } %>>Oui</option>									<option value="0" <% if (configSonos.exportAllVoice == 0){ %>selected<% } %>>Non</option>								</select>							</td>							<td class="commentaires">								<ul>									<li><%- i18n('plugin.sonos.suppExportVoice1') -%></li>									<li><%- i18n('plugin.sonos.suppExportVoice2') -%></li>								</ul>							</td>						</tr>						<tr <% if (configSonos.exportAllVoice != 1) { %>style="display:none"<% } %> id="TypeExportTR">							<td><%- i18n('plugin.sonos.titleTypeExport') -%></td>							<td>								<select name="exportType" id="exportType" onChange="if (this.value == 1) {$('#exportTypeEnceinte').css('display','block');} else {$('#exportTypeEnceinte').css('display','none');} ">									<option value="1" <% if (configSonos.exportType == 1){ %>selected<% } %>>Une seule enceinte</option>									<option value="2" <% if (configSonos.exportType == 2){ %>selected<% } %>>Toute les enceintes</option>									<option value="3" <% if (configSonos.exportType == 3){ %>selected<% } %>>Multiroom</option>								</select>								<br />								<input type="hidden" name="enceinteAlone[name]" id="enceinteAlonename" value="<%= configSonos.enceinteAlone.name %>" />								<input type="hidden" name="enceinteAlone[mac]" id="enceinteAlonemac" value="<%= configSonos.enceinteAlone.mac %>" />								<input type="hidden" name="enceinteAlone[ip]" id="enceinteAloneip" value="<%= configSonos.enceinteAlone.ip %>" />								<select <% if (configSonos.exportType != 1) { %>style="display:none"<% } %> id="exportTypeEnceinte" onChange="$('#enceinteAlonemac').val($('option:selected', this).attr('mac'));$('#enceinteAloneip').val($('option:selected', this).attr('ip'));$('#enceinteAlonename').val($('option:selected', this).attr('name'));">											<option mac="" ip="">...</option>											<%											for (var deviceIndex in devices){ %>															<option <% if (configSonos.enceinteAlone.mac == devices[deviceIndex].mac){ %>selected<% } %> mac="<%= devices[deviceIndex].mac %>" ip="<%= devices[deviceIndex].ip %>" name="<%= devices[deviceIndex].name %>"><%= devices[deviceIndex].name %></option>												<%											}											%>								</select>							</td>							<td class="commentaires">								<ul>									<li><%- i18n('plugin.sonos.suppTypeExport1') -%></li>									<li><%- i18n('plugin.sonos.suppTypeExport2') -%></li>									<li><%- i18n('plugin.sonos.suppTypeExport3') -%></li>								</ul>							</td>						</tr>						<tr  id="VoiceChoiceTR">							<td><%- i18n('plugin.sonos.titleVoice') -%></td>							<td>								<select name="typeOfVoice" id="typeOfVoice" onChange="limitSilence(1)">									<option value="Std_SARAH" <% if (configSonos.typeOfVoice == "Std_SARAH"){ %>selected<% } %>>Standard</option>									<optgroup label="Arabic">										<option value="Adel" <% if (configSonos.typeOfVoice == "Adel"){ %>selected<% } %>>Adel</option>									</optgroup>									<optgroup label="English">										<option value="Bibi" <% if (configSonos.typeOfVoice == "Bibi"){ %>selected<% } %>>Bibi</option>										<option value="Bronwen" <% if (configSonos.typeOfVoice == "Bronwen"){ %>selected<% } %>>Bronwen</option>										<option value="Elizabeth" <% if (configSonos.typeOfVoice == "Elizabeth"){ %>selected<% } %>>Elizabeth</option>										<option value="Paul" <% if (configSonos.typeOfVoice == "Paul"){ %>selected<% } %>>Paul</option>									</optgroup>									<optgroup label="Español">										<option value="Marta" <% if (configSonos.typeOfVoice == "Marta"){ %>selected<% } %>>Marta</option>									</optgroup>									<optgroup label="Français">										<option value="Loic" <% if (configSonos.typeOfVoice == "Loic"){ %>selected<% } %>>Loic</option>										<option value="Agnes" <% if (configSonos.typeOfVoice == "Agnes"){ %>selected<% } %>>Agnes</option>										<option value="Melodine" <% if (configSonos.typeOfVoice == "Melodine"){ %>selected<% } %>>Melodine</option>										<option value="Chut" <% if (configSonos.typeOfVoice == "Chut"){ %>selected<% } %>>Chut</option>										<option value="Bicool" <% if (configSonos.typeOfVoice == "Bicool"){ %>selected<% } %>>Bicool</option>										<option value="Philippe" <% if (configSonos.typeOfVoice == "Philippe"){ %>selected<% } %>>Philippe</option>										<option value="Electra" <% if (configSonos.typeOfVoice == "Electra"){ %>selected<% } %>>Electra</option>										<option value="Damien" <% if (configSonos.typeOfVoice == "Damien"){ %>selected<% } %>>Damien</option>										<option value="DarkVadoor" <% if (configSonos.typeOfVoice == "DarkVadoor"){ %>selected<% } %>>DarkVadoor</option>										<option value="Ramboo" <% if (configSonos.typeOfVoice == "Ramboo"){ %>selected<% } %>>Ramboo</option>										<option value="John" <% if (configSonos.typeOfVoice == "John"){ %>selected<% } %>>John</option>										<option value="Helene" <% if (configSonos.typeOfVoice == "Helene"){ %>selected<% } %>>Helene</option>										<option value="Eva" <% if (configSonos.typeOfVoice == "Eva"){ %>selected<% } %>>Eva</option>										<option value="JeanJean" <% if (configSonos.typeOfVoice == "JeanJean"){ %>selected<% } %>>JeanJean</option>										<option value="Papi" <% if (configSonos.typeOfVoice == "Papi"){ %>selected<% } %>>Papi</option>										<option value="Robot" <% if (configSonos.typeOfVoice == "Robot"){ %>selected<% } %>>Robot</option>										<option value="Sidoo" <% if (configSonos.typeOfVoice == "Sidoo"){ %>selected<% } %>>Sidoo</option>										<option value="Sorciere" <% if (configSonos.typeOfVoice == "Sorciere"){ %>selected<% } %>>Sorciere</option>										<option value="Yeti" <% if (configSonos.typeOfVoice == "Yeti"){ %>selected<% } %>>Yeti</option>										<option value="Zozo" <% if (configSonos.typeOfVoice == "Zozo"){ %>selected<% } %>>Zozo</option>									</optgroup>									<optgroup label="Italiano">										<option value="Sonia" <% if (configSonos.typeOfVoice == "Sonia"){ %>selected<% } %>>Sonia</option>									</optgroup>								</select>							</td>							<td class="commentaires"><%- i18n('plugin.sonos.descVoice') -%></td>						</tr>						<tr id="SilenceTR">							<td><%- i18n('plugin.sonos.titreSilenceHour') -%></td>							<td>								<table>									<tbody>										<tr>											<td rowspan=2 width="105px">												<select name="Silence" id="Silence" onChange="limitSilence(2)">													<option value="1" <% if (configSonos.Silence == 1){ %>selected<% } %>>Activé</option>													<option value="0" <% if (configSonos.Silence == 0){ %>selected<% } %>>Désactivé</option>												</select>											</td>											<td>												<%- i18n('plugin.sonos.between') -%>											</td>											<td width="150px">												<div class="input-group date">													<input name ="silenceStart" id="timepicker1" type="text" class="form-control">													 <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span>												</div>											</td>										</tr>										<tr>											<td><%- i18n('plugin.sonos.and') -%></td>											<td>												<div class="input-group date">													<input id="timepicker2" name ="silenceEnd" type="text" class="form-control">													 <span class="input-group-addon"><span class="glyphicon glyphicon-time"></span>												</div>											</td>										</tr>									</tbody>								</table>							</td>							<td class="commentaires">								<%- i18n('plugin.sonos.descSilenceHour') -%>							</td>						</tr>											</tbody>				</table>							<div align="center"><button class="btn btn-success" type="button" id="submitSonos"><%- i18n('plugin.sonos.valid') -%></button></div>			</form>		</div>		<div class="tab-pane" id="plugin-errors">			<h1>Sarah répond en anglais à travers les SONOS</h1>			<div class="span3 well plugin-nav">			1. Download RSSolo4French.zip <a href="http://faq.sodeasoft.com/dwn/RSSolo4French.zip" >http://faq.sodeasoft.com/dwn/RSSolo4French.zip</a><br />			2. Décompacter<br />			3. Installer<br />			4. Aller à : C:\Windows\SysWOW64\Speech\SpeechUX<br />			5. Double clic sur le fichier sapi.cpl (faite un raccourci bureau)<br />			6. Selectioner la voix  ScanSoft Virginie_Dri40_16kHz<br />			7. Utiliser la phrase suivante: "Merci sarah" :-)<br />			8. Cliquer: Tester la voix<br />			9. Cliquer: Appliquer<br />			10. Cliquer:OK﻿<br />			</div>						<h1>J'obtiens "Fatal Error: Sarah's IP cannot be 127.0.0.1 to use sonos plugin" dans la console serveur</h1>			<div class="span3 well plugin-nav">			Le plugin Sonos ne peut fonctionner correctement si l'adresse IP de SARAH est 127.0.0.1			<br /><br />			1. Rendez-vous dans Configuration > HTTP<br />			2. Renseignez dans le champ "Ip du Serveur" l'adresse réseau de votre ordinateur (cf <a target="_blank" href="http://assistance.orange.fr/connaitre-l-adresse-ip-de-votre-ordinateur-42.php">Connaitre l'adresse ip de votre ordinateur</a>)			</div>						<h1>L'export des voix ne fonctionne pas ou le multiroom ne s'active pas</h1>			<div class="span3 well plugin-nav">				Une modification dans le coeur de SARAH est encore nécessaire pour activer cette fonction.				<br /><br />				Appliquez la modification ci-dessous dans le fichier server/app/server/script.js (ligne 27)				<br /><br />				Remplacer<br />				<code>						extend(true, _last, options);				</code>				<br />				Par<br />				<code>						extend(true, _last, options); SARAH.ScriptManager.lastCmd = _last;				</code>			</div>		</div>		<div class="tab-pane active" id="plugin-version">			<h4>TODO</h4>			<pre>[X] Listing radio (#3).<br / >[X] Vocalisation sur plusieurs sonos.<br/>[X] Réparer la synchronisation (#11 et #12).<br/>				</pre>			<h4>V2.2</h4>			<pre>[X] Choix de la Sonos ou vocaliser par pièce.<br />[X] Possibilité de spécifier l'enceinte sur laquelle jouer.<br />[X] Rajout de la notion de nom d'enceinte directement alimenté depuis les noms des Sonos.<br/>[X] Possibilité d'avoir un retour d'action (SARAH lance la Radio => Ok, je lance la radio).<br/>[X] Heure de Silence => Lorsque la vocalisation est activée il est possible de spécifier à SARAH une plage horaire ou ne pas parler.<br/>[X] Alimenter les pieces dans le XML automatiquement (Sarah lance la musique DANS LE BUREAU).<br/>[X] Fix: Rajout d'un lien pour actualiser la config Sonos en cas d'erreur de détection.<br/>[X] Fix: Correction d'un bug qui empéchait l'ajout d'enceintes supplémentaires dans certains cas.<br/>[X] Fix: Lors de la lecture d'une radio, un TTS n'intérrompt  plus la playlist, on passe à la musique suivante.<br/>			</pre>			<h4>V2.1</h4>			<pre>[X] Correction du bug qui empechait Sarah de parler jusqu'au bout dans certains longs TTS.<br />[X] Correction et amélioration du .XML<br />[X] Correction du bug qui empechait une radio google music de se relancer correctement après le TTS.<br />[X] Correction des synchronisations avec l'api V5 de SONOS<br />[X] Ajout d'une checkbox pour choisir sur quel enceinte vocalisé<br />[X] Auto[X]découverte des équipements SONOS depuis le réseau (Ceci simplifie la configuration, il n'est plus necessaire de renseigner les ip et les adresses mac à la main)<br />[X] Modification de la méthode d'envoi du TTS. L'envoi est maintenant plus rapide et plus fiable<br />[X] Ajout d'un paramètre pour configurer le palier quand Sarah monte ou baisse le volume<br />[X] Nettoyage du code pour plus de lisibilité. Le plugin fait maintenant appel à un module SonosAPI				</pre>			<h4>V2</h4>			<pre>[X] Corrections de bugs majeurs (Topology des pièces) et mineurs <br />[X] Synchronisation des pièces entres elle<br />[X] Redirection des TTS<br />[X] Nouvelle interface de configuration (disponible dans la page de documentation)			</pre>			<h4>V1</h4>			<pre>[X] Initial Commit<br />[X] Play / pause / prev / next (control your sonos)			</pre>		</div>	</div>